package leet;
import java.util.HashSet;
import java.util.Set;

public class ValidSudoku36 {
	/**
	 * ç½‘ä¸Šæœ‰è§£æ³•ç”¨é??åŽ†è¡Œï¼Œé??åŽ†åˆ—ï¼Œé??åŽ†ä¹?å®«æ ¼çš„æ–¹æ³•ï¼›è¿™ç§?è§£æ³•ä¼šæœ‰å¤§é‡?çš„é‡?å¤?è®¿é—®èŠ‚ç‚¹çš„æƒ…å†µ
	 * æ ¹æ?®è§„åˆ™ï¼Œå?Œä¸€ä¸ªæ•°å­—å‡ºçŽ°çš„ä½?ç½®ä¸?èƒ½åœ¨å?Œä¸€è¡Œï¼Œå?Œä¸€åˆ—ï¼Œæ‰€ä»¥ä¸º1-9è¿™äº›æ•°å­—åˆ?å§‹åŒ–9ä¸ªNodeï¼Œ
	 * å?„ä¸ªNodeéƒ½æœ‰ä¸‰ä¸ªå±žæ€§ï¼Œåˆ†åˆ«ä¸ºâ€œè¡Œâ€?ï¼Œâ€œåˆ—â€?ï¼Œâ€œå®«â€? è®°å½•ä»–ä»¬çš„ä½?ç½®ï¼Œä½¿ç”¨HashSet
	 * @param board
	 * @return
	 * 2016-5-24
	 * Gavin
	 */
	private static class Node{
		/**
		 * æ— é¡»ä½¿ç”¨å†…éƒ¨ç±»çš„ï¼Œåˆ?å§‹åŒ–ä¸‰ä¸ªæ•°ç»„å°±å¥½äº†
		 */
		private int num;
		private Set<Integer> row;
		private Set<Integer> col;
		private Set<Integer> gong;
		
		public Node(int num)
		{
			this.num = num;
			row = new HashSet<Integer>();
			col = new HashSet<Integer>();
			gong = new HashSet<Integer>();
		}
		
	}
	
    public boolean isValidSudoku(char[][] board) {
    	if(board == null || board.length ==0)
    		return false;
    	if(board.length != 9 && board[0].length !=9)
    		return false;
    	Node[] nodes = new Node[10];
    	//åˆ?å§‹åŒ–æ•°å­—èŠ‚ç‚¹
    	for(int i=1;i<10;i++)
    	{
    		nodes[i] = new Node(i);
    	}
    	for(int i=0;i<9;i++)
    		for(int j=0;j<9;j++)
    		{
    			if(board[i][j] == '.')
    				continue;
    			int num = board[i][j] - '0';
    			/**
    			 * ä¸ºâ€œå®«â€?ç¼–å?·ï¼š(i/3)*3 + (j/3)
    			 */
    			int gNum = (i/3)*3 + (j/3);
    			if( nodes[num].row.contains(i) || nodes[num].col.contains(j)
    					|| nodes[num].gong.contains(gNum))
    					return false;
    			
    			nodes[num].row.add(i);
    			nodes[num].col.add(j);
    			nodes[num].gong.add(gNum);
    		}
        return true;
    }
    public static void main(String args[])
    {
    	Node[] nodes = new Node[10];
    	for(int i=1;i<10;i++)
    	{
    		nodes[i] = new Node(i);
    		System.out.println(nodes[i].num);
    	}
    	
    }

}
